local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

local Camera = Workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local InstantHeal_Enabled = false
local InstantInteract_Enabled = false
local NoFog_Enabled = false
local FullBright_Enabled = false

local originalLightingValues = {
	FogStart = nil,
	FogEnd = nil,
	FogColor = nil,
	Ambient = nil,
	OutdoorAmbient = nil,
	Brightness = nil,
	ColorShift_Top = nil,
	ColorShift_Bottom = nil,
    AtmosphereInstance = nil,
    AtmosphereDensity = nil,
    AtmosphereOffset = nil,
    AtmosphereHaze = nil,
    AtmosphereColor = nil,
}
local lightingPropertiesStored = {
    Fog = false,
    Brightness = false,
    Atmosphere = false,
}

local function SafeDestroy(instance)
    if instance and instance.Parent then
        pcall(function() instance:Destroy() end)
    end
end

function IsValid(instance)
    return instance and instance.Parent ~= nil
end

local function instantHeal()
    local character = LocalPlayer.Character
    if not character then return false end
    local bandage = character:FindFirstChild("Bandage")
    if not bandage then return false end
    local useRemote = bandage:FindFirstChild("Use")
    if not useRemote or not useRemote:IsA("RemoteEvent") then return false end
    local success = pcall(function() useRemote:FireServer() end)
    if not success then warn("Failed to fire Bandage 'Use' remote.") end
    return success
end

local bandageRenderStepConnection = nil
local function patchBandageSystem()
    local success, bandageUI = pcall(function() return LocalPlayer.PlayerGui:WaitForChild("BandageUse", 5) end)
    if not success or not bandageUI then warn("Failed to find BandageUse GUI"); return end
    local lineFrame = bandageUI:FindFirstChild("LineFrame", true)
    local fillBar = lineFrame and lineFrame:FindFirstChild("Fill")
    if not fillBar then warn("Failed to find Bandage Fill Bar") end
    if bandageRenderStepConnection then bandageRenderStepConnection:Disconnect(); bandageRenderStepConnection = nil end
    bandageRenderStepConnection = RunService:BindToRenderStep("InstantBandage", Enum.RenderPriority.Camera.Value + 1, function()
        if InstantHeal_Enabled and bandageUI.Enabled then
            local uiVisible = bandageUI.Enabled
            if fillBar then pcall(function() fillBar.Size = UDim2.new(1, 0, 1, 0) end) end
            local healed = instantHeal()
            if healed then pcall(function() bandageUI.Enabled = false end) elseif uiVisible then end
        end
    end)
end

local function modifyProximityPrompt(prompt)
    if not prompt:IsA("ProximityPrompt") then return end
    local success = pcall(function()
        local originalDuration = prompt.HoldDuration
        if not prompt:GetAttribute("OriginalHoldDuration") then prompt:SetAttribute("OriginalHoldDuration", originalDuration) end
        if InstantInteract_Enabled then prompt.HoldDuration = 0.05 end
    end)
    if not success then warn("Failed to modify prompt:", prompt:GetFullName()) end
end

local function restoreProximityPrompt(prompt)
    if not prompt:IsA("ProximityPrompt") then return end
     local success = pcall(function()
        local originalDuration = prompt:GetAttribute("OriginalHoldDuration")
        if originalDuration then prompt.HoldDuration = originalDuration end
    end)
    if not success then warn("Failed to restore prompt:", prompt:GetFullName()) end
end

local function updateAllProximityPrompts()
    for _, descendant in pairs(Workspace:GetDescendants()) do
        if descendant:IsA("ProximityPrompt") then
            if InstantInteract_Enabled then modifyProximityPrompt(descendant) else restoreProximityPrompt(descendant) end
        end
    end
end

local function StoreOriginalLighting(type)
    if type == "Fog" and not lightingPropertiesStored.Fog then
        pcall(function() originalLightingValues.FogStart = Lighting.FogStart end)
        pcall(function() originalLightingValues.FogEnd = Lighting.FogEnd end)
        pcall(function() originalLightingValues.FogColor = Lighting.FogColor end)
        lightingPropertiesStored.Fog = true
    elseif type == "Brightness" and not lightingPropertiesStored.Brightness then
        pcall(function() originalLightingValues.Ambient = Lighting.Ambient end)
        pcall(function() originalLightingValues.OutdoorAmbient = Lighting.OutdoorAmbient end)
        pcall(function() originalLightingValues.Brightness = Lighting.Brightness end)
        pcall(function() originalLightingValues.ColorShift_Top = Lighting.ColorShift_Top end)
        pcall(function() originalLightingValues.ColorShift_Bottom = Lighting.ColorShift_Bottom end)
        lightingPropertiesStored.Brightness = true
    elseif type == "Atmosphere" and not lightingPropertiesStored.Atmosphere then
        local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
        if atmosphere then
            originalLightingValues.AtmosphereInstance = atmosphere
            pcall(function() originalLightingValues.AtmosphereDensity = atmosphere.Density end)
            pcall(function() originalLightingValues.AtmosphereOffset = atmosphere.Offset end)
            pcall(function() originalLightingValues.AtmosphereHaze = atmosphere.Haze end)
            pcall(function() originalLightingValues.AtmosphereColor = atmosphere.Color end)
            lightingPropertiesStored.Atmosphere = true
        end
    end
end

local function ApplyNoFog()
    pcall(function() Lighting.FogStart = 1000000 end)
    pcall(function() Lighting.FogEnd = 2000000 end)
    local atmosphere = Lighting:FindFirstChildOfClass("Atmosphere")
    if atmosphere then
        pcall(function() atmosphere.Density = 0 end)
        pcall(function() atmosphere.Offset = 0 end)
        pcall(function() atmosphere.Haze = 0 end)
    end
end

local function RestoreNoFog()
    if lightingPropertiesStored.Fog then
        pcall(function() Lighting.FogStart = originalLightingValues.FogStart end)
        pcall(function() Lighting.FogEnd = originalLightingValues.FogEnd end)
        pcall(function() Lighting.FogColor = originalLightingValues.FogColor end)
    end
    if lightingPropertiesStored.Atmosphere and IsValid(originalLightingValues.AtmosphereInstance) then
        local atmosphere = originalLightingValues.AtmosphereInstance
        pcall(function() atmosphere.Density = originalLightingValues.AtmosphereDensity end)
        pcall(function() atmosphere.Offset = originalLightingValues.AtmosphereOffset end)
        pcall(function() atmosphere.Haze = originalLightingValues.AtmosphereHaze end)
        pcall(function() atmosphere.Color = originalLightingValues.AtmosphereColor end)
    end
end

local function ApplyFullBright()
    pcall(function() Lighting.Ambient = Color3.fromRGB(180, 180, 180) end)
    pcall(function() Lighting.OutdoorAmbient = Color3.fromRGB(180, 180, 180) end)
    pcall(function() Lighting.Brightness = 2 end)
    pcall(function() Lighting.ColorShift_Top = Color3.fromRGB(0, 0, 0) end)
    pcall(function() Lighting.ColorShift_Bottom = Color3.fromRGB(0, 0, 0) end)
    local sky = Lighting:FindFirstChildOfClass("Sky") or Camera:FindFirstChildOfClass("Sky")
    if sky then pcall(function() sky.Brightness = 2 end) end
end

local function RestoreFullBright()
    if lightingPropertiesStored.Brightness then
        pcall(function() Lighting.Ambient = originalLightingValues.Ambient end)
        pcall(function() Lighting.OutdoorAmbient = originalLightingValues.OutdoorAmbient end)
        pcall(function() Lighting.Brightness = originalLightingValues.Brightness end)
        pcall(function() Lighting.ColorShift_Top = originalLightingValues.ColorShift_Top end)
        pcall(function() Lighting.ColorShift_Bottom = originalLightingValues.ColorShift_Bottom end)
    end
end

RunService.RenderStepped:Connect(function()
    if NoFog_Enabled then
        ApplyNoFog()
    end
    if FullBright_Enabled then
        ApplyFullBright()
    end
end)

Workspace.DescendantAdded:Connect(function(descendant)
    if InstantInteract_Enabled and descendant:IsA("ProximityPrompt") then modifyProximityPrompt(descendant) end
    if descendant:IsA("Atmosphere") and not lightingPropertiesStored.Atmosphere then
        StoreOriginalLighting("Atmosphere")
        if NoFog_Enabled then ApplyNoFog() end
    end
end)

local defaultFOV = math.clamp(Camera.FieldOfView, 70, 110)

local Window = Rayfield:CreateWindow({
    Name = "дед реилс нахуй",
    LoadingTitle = "Загрузка...",
    LoadingSubtitle = "by Максимка",
    Theme = "Default",
})

local WhatsNewTab = Window:CreateTab("Что нового?", "info")
WhatsNewTab:CreateParagraph({
    Title = "Список изменений",
    Content = "30.03.2025 04:23 | Добавил моментальное использование аптечки\n30.03.2025 04:35 | Добавил быстрое взаимодействие\n30.03.2025 12:20 | FIX: Улучшена стабильность\n30.03.2025 15:02 | Добавлена функция удаление тумана и полная яркость для ночи"
})

local MainTab = Window:CreateTab("Главное", "home")

MainTab:CreateToggle({ Name = "Мгновенное использование аптечки", CurrentValue = InstantHeal_Enabled, Flag = "InstantHealToggle", Callback = function(Value) InstantHeal_Enabled = Value end })
MainTab:CreateToggle({ Name = "Быстрое взаимодействие", CurrentValue = InstantInteract_Enabled, Flag = "InstantInteractToggle", Callback = function(Value) InstantInteract_Enabled = Value; updateAllProximityPrompts() end })

MainTab:CreateToggle({
    Name = "Убрать туман",
    CurrentValue = NoFog_Enabled,
    Flag = "NoFogToggle",
    Callback = function(Value)
        NoFog_Enabled = Value
        if Value then
            StoreOriginalLighting("Fog")
            StoreOriginalLighting("Atmosphere")
            ApplyNoFog()
        else
            RestoreNoFog()
        end
    end
})

MainTab:CreateToggle({
    Name = "Полная яркость",
    CurrentValue = FullBright_Enabled,
    Flag = "FullBrightToggle",
    Callback = function(Value)
        FullBright_Enabled = Value
        if Value then
            StoreOriginalLighting("Brightness")
            ApplyFullBright()
        else
            RestoreFullBright()
        end
    end
})

MainTab:CreateSlider({
    Name = "Размер прицела",
    Range = {0.1, 0.7}, Increment = 0.1, Suffix = "x", CurrentValue = 0.3, Flag = "CrosshairSizeSlider",
    Callback = function(Value)
        local success = pcall(function()
            local playerGui = LocalPlayer:FindFirstChild("PlayerGui")
            local crosshairUI = playerGui and playerGui:FindFirstChild("Crosshair")
            local crosshair = crosshairUI and crosshairUI:FindFirstChild("Crosshair")
            if crosshair and (crosshair:IsA("ImageLabel") or crosshair:IsA("Frame")) then
                crosshair.Size = UDim2.new(0, Value * 20, 0, Value * 20)
            end
        end)
    end
})

MainTab:CreateSlider({
    Name = "Угол обзора",
    Range = {70, 110}, Increment = 1, Suffix = "°", CurrentValue = defaultFOV, Flag = "FOVSlider",
    Callback = function(Value) Camera.FieldOfView = Value end
})

patchBandageSystem()
updateAllProximityPrompts()
StoreOriginalLighting("Fog")
StoreOriginalLighting("Brightness")
StoreOriginalLighting("Atmosphere")
